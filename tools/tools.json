[
  {
    "tool_name": "detect_object",
    "description": "Checks if the object is detected and returns True if detected, and False otherwise.",
    "parameters": {
      "object_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "Is there a chair in the room?",
        "command": "detect_object('chair')",
        "return_description": "Returns True if the object is visible, and False otherwise."
      }
    ]
  },
  {
    "tool_name": "enumerate_objects",
    "description": "Detects objects in the environment and returns a list of recognized objects.",
    "parameters": {},
    "use_cases": [
      {
        "user_request": "What objects are in the room?",
        "command": "enumerate_objects()",
        "return_description": "Returns a list of visible objects recognized by the assistant."
      }
    ]
  },
  {
    "tool_name": "navigation",
    "description": "Enables navigation to a specified destination.",
    "parameters": {
      "destination": ["string"]
    },
    "use_cases": [
      {
        "user_request": "Lead me to the nearest shop.",
        "command": "navigation('nearest shop')",
        "return_description": "Proposes opening a navigation application to the chosen destination."
      }
    ]
  },
  {
    "tool_name": "position",
    "description": "Allows the user to know their current location.",
    "parameters": {},
    "use_cases": [
      {
        "user_request": "Where am I?",
        "command": "position()",
        "return_description": "Returns the current location of the user."
      }
    ]
  },
  {
    "tool_name": "add_face",
    "description": "Allows adding a face to the face recognition's database.",
    "parameters": {
      "person_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "Add Mary in the known faces.",
        "command": "add_face('Mary')",
        "return_description": "Guides the user to optimally capture the face of the person to be added."
      }
    ]
  },
  {
    "tool_name": "remove_face",
    "description": "Allows removing a face to the face recognition's database.",
    "parameters": {
      "person_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "Remove Joseph from the known faces.",
        "command": "remove_face('Joseph')",
        "return_description": "user_requests confirmation and, if unsure, enumerates possible profiles."
      }
    ]
  },
  {
    "tool_name": "look_for_face",
    "description": "Allows looking for a face from the face recognition's database.",
    "parameters": {
      "person_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "Is Mary present?",
        "command": "look_for_face('Mary')",
        "return_description": "Responds and, if the person is present, offers to locate them."
      }
    ]
  },
  {
    "tool_name": "enumerate_individuals",
    "description": "Allows adding a face to the face recognition's database.",
    "parameters": {},
    "use_cases": [
      {
        "user_request": "Who is present?",
        "command": "enumerate_individuals()",
        "return_description": "Returns a list of present individuals based on appearance order."
      }
    ]
  },
  {
    "tool_name": "age_estimation",
    "description": "Allows estimating the age from a face present in the face recognition's database.",
    "parameters": {
      "person_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "What is Bob's age?",
        "command": "age_estimation('Bob')",
        "return_description": "Returns the estimated age of the person (only if in the assistant's database)."
      }
    ]
  },
  {
    "tool_name": "gender_estimation",
    "description": "Allows estimating the gender from a face present in the face recognition's database.",
    "parameters": {
      "person_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "What is Bill's gender?",
        "command": "gender_estimation('Bill')",
        "return_description": "Returns the estimated age or gender of the person (only if in the assistant's database)."
      }
    ]
  },
  {
    "tool_name": "emotion_estimation",
    "description": "Allows estimating the emotion from a face present in the face recognition's database.",
    "parameters": {
      "person_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "In what mood is Alice?",
        "command": "emotion_estimation('Alice')",
        "return_description": "Returns the estimated age or gender of the person (only if in the assistant's database)."
      }
    ]
  },
  {
    "tool_name": "colors",
    "description": "Recognizes the dominant color of objects and the environment.",
    "parameters": {
      "object_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "What are the colors of the chair?",
        "command": "colors('chair')",
        "return_description": "Enumerates objects and indicates their colors."
      }
    ]
  },
  {
    "tool_name": "object_color",
    "description": "Identify the dominant color of objects",
    "parameters": {
      "object_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "What is the main color of the chair?",
        "command": "object_color('chair')",
        "return_description": "If the object is visible, returns the dominant color of the object."
      }
    ]
  },
  {
    "tool_name": "ocr",
    "description": "Reads text from objects.",
    "parameters": {
      "object_name": ["string"]
    },
    "use_cases": [
      {
        "user_request": "Read the text on the box.",
        "command": "ocr('box')",
        "return_description": "Returns a vocal transcription of the text."
      }
    ]
  },
  {
    "tool_name": "ocr_objects",
    "description": "Reads text from objects.",
    "parameters": {},
    "use_cases": [
      {
        "user_request": "Is there any text in the room?",
        "command": "ocr_objects()",
        "return_description": "Returns a list of objects with text."
      }
    ]
  },
  {
    "tool_name": "money",
    "description": "Recognizes the value and currency of coins and banknotes.",
    "parameters": {},
    "use_cases": [
      {
        "user_request": "How much money is there?",
        "command": "money()",
        "return_description": "Returns a list of detected elements and the total amount."
      }
    ]
  },
  {
    "tool_name": "environment_description",
    "description": "Describes the environment.",
    "parameters": {},
    "use_cases": [
      {
        "user_request": "Describe the environment.",
        "command": "environment_description()",
        "return_description": "Provides a 'caption' regarding what the assistant sees or a list of visible objects for the assistant."
      }
    ]
  },
  {
    "tool_name": "environment_question",
    "description": "Answers questions about it.",
    "parameters": {},
    "use_cases": [
      {
        "user_request": "Am I in a garden?",
        "command": "environment_question('Am I in a garden?')",
        "return_description": "Responds to the question."
      }
    ]
  }
]
